name: Artigos
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: articles
    metadata:
      title: 'Lista todos os artigos'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [
           {
             "id": 1,
              "title": "NASA Selects Four University Teams for Aviation Projects",
              "url": "http://www.nasa.gov/press-release/nasa-selects-four-university-teams-for-aviation-projects",
              "imageUrl": "https://www.nasa.gov/sites/default/files/thumbnails/image/university-concept.jpg?itok=HPhDA6V-",
              "newsSite": "NASA",
          "     summary": "NASA’s research focus on sustainable aviation will get some big help from teams of university
          faculty and students recently selected to participate in the agency’s University Leadership Initiative (ULI).",
               "featured": false,
               "launches": [],
               "events": [],
               "publishedAt": "2021-12-23T19:06:00.000000Z",
               "updatedAt": "2021-12-23T19:06:55.000000Z"
            }
          ],
          "links": {
            "first": "http://laravel-backend-challenge.test/articles?page=1",
            "last": "http://laravel-backend-challenge.test/articles?page=1",
            "prev": null,
            "next": null
           },
           "meta": {
            "current_page": 1,
            "from": 1,
            "last_page": 1,
            "links": [
               {
                  "url": null,
                 "label": "&laquo; Previous",
                 "active": false
               },
               {
               "url": "http://laravel-backend-challenge.test/articles?page=1",
               "label": "1",
               "active": true
              },
              {
               "url": null,
               "label": "Next &raquo;",
               "active": false
               }
            ],
              "path": "http://laravel-backend-challenge.test/articles",
              "per_page": 15,
              "to": 1,
              "total": 1
             }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'articles/{id}'
    metadata:
      title: 'Deleta um artigo'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the article.'
        required: true
        example: 5
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Artigo deletado!"
          }
        headers: []
        description: '200'
      -
        status: 404
        content: |-
          {
           "message": "Resource not found!"
          }
        headers: []
        description: '404'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: articles
    metadata:
      title: 'Adiciona um novo artigo'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the article.'
        required: true
        example: quo
        type: string
        custom: []
      url:
        name: url
        description: 'The url of the article.'
        required: true
        example: consequatur
        type: string
        custom: []
      imageUrl:
        name: imageUrl
        description: 'The image url of the article.'
        required: true
        example: voluptatem
        type: string
        custom: []
      newsSite:
        name: newsSite
        description: 'The news site of the article.'
        required: true
        example: unde
        type: string
        custom: []
      summary:
        name: summary
        description: 'The summary of the article.'
        required: true
        example: nisi
        type: string
        custom: []
      featured:
        name: featured
        description: 'The featured of the article.'
        required: true
        example: true
        type: boolean
        custom: []
      launches:
        name: launches
        description: 'The launches of the article.'
        required: true
        example:
          - deleniti
        type: 'string[]'
        custom: []
      events:
        name: events
        description: 'The events of the article.'
        required: true
        example:
          - officiis
        type: 'string[]'
        custom: []
    responses:
      -
        status: 201
        content: |-
          {
          {
             "data": {
                 "title": "omnis",
                  "url": "occaecati",
                  "imageUrl": "est",
                 "newsSite": "et",
                  "summary": "omnis",
                  "featured": true,
                  "publishedAt": "2021-12-25T13:16:00.000000Z",
                 "updatedAt": "2021-12-25T19:01:28.000000Z",
                 "id": 17
             }
           }
        headers: []
        description: '201'
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
                 "errors": {
                     "title": [
                         "The title field is required."
                    ],
                     "url": [
                        "The url field is required."
                     ],
                     "imageUrl": [
                        "The image url field is required."
                     ],
                    "newsSite": [
                          "The news site field is required."
                    ],
                     "summary": [
                        "The summary field is required."
                   ],
                    "featured": [
                       "The featured field is required."
                  ]
              }
          }
        headers: []
        description: '422'
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'articles/{id}'
    metadata:
      title: 'Atualiza um único artigo'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the article.'
        required: true
        example: 9
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the article.'
        required: true
        example: et
        type: string
        custom: []
      url:
        name: url
        description: 'The url of the article.'
        required: true
        example: sapiente
        type: string
        custom: []
      imageUrl:
        name: imageUrl
        description: 'The image url of the article.'
        required: true
        example: ducimus
        type: string
        custom: []
      newsSite:
        name: newsSite
        description: 'The news site of the article.'
        required: true
        example: vero
        type: string
        custom: []
      summary:
        name: summary
        description: 'The summary of the article.'
        required: true
        example: eius
        type: string
        custom: []
      featured:
        name: featured
        description: 'The featured of the article.'
        required: true
        example: false
        type: boolean
        custom: []
      launches:
        name: launches
        description: 'The launches of the article.'
        required: true
        example:
          - velit
        type: 'string[]'
        custom: []
      events:
        name: events
        description: 'The events of the article.'
        required: true
        example:
          - sed
        type: 'string[]'
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
             "data": {
                "id": 10
                 "title": "omnis",
                  "url": "occaecati",
                  "imageUrl": "est",
                  "newsSite": "et",
                  "summary": "omnis",
                  "featured": true,
                  "publishedAt": "2021-12-25T13:16:00.000000Z",
                  "updatedAt": "2021-12-25T19:01:28.000000Z",
             }
           }
        headers: []
        description: '200'
      -
        status: 404
        content: |-
          {
           "message": "Resource not found!"
          }
        headers: []
        description: '404'
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
                 "errors": {
                     "title": [
                         "The title field is required."
                    ],
                     "url": [
                        "The url field is required."
                     ],
                     "imageUrl": [
                        "The image url field is required."
                     ],
                    "newsSite": [
                          "The news site field is required."
                    ],
                     "summary": [
                        "The summary field is required."
                   ],
                    "featured": [
                       "The featured field is required."
                  ]
              }
          }
        headers: []
        description: '422'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'articles/{id}'
    metadata:
      title: 'Obter um único artigo'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the article.'
        required: true
        example: 15
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "data": {
                 "title": "omnis",
                  "url": "occaecati",
                  "imageUrl": "est",
                 "newsSite": "et",
                  "summary": "omnis",
                  "featured": true,
                  "publishedAt": "2021-12-25T13:16:00.000000Z",
                 "updatedAt": "2021-12-25T19:01:28.000000Z",
                 "id": 17
             }
           }
        headers: []
        description: '200'
      -
        status: 404
        content: |-
          {
           "message": "Resource not found!"
          }
        headers: []
        description: '404'
    responseFields: []
